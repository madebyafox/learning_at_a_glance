fx = detect.fixations(just_eyedata,lambda = 10)
fx = detect.fixations(just_eyedata,lambda = 20)
fx = detect.fixations(just_eyedata,lambda = 200)
fx = detect.fixations(just_eyedata,lambda = 50)
fx = detect.fixations(just_eyedata,lambda = 15,smooth.saccades=F)
View(fx)
View(just_eyedata)
just_eyedata = data.frame(x=all_data$xmousex,y=all_data$ymousey,
time=seq.int(1, nrow(all_data)),trial=rep.int(1, nrow(all_data)))
fx = detect.fixations(just_eyedata,lambda = 2)
View(fx)
fx = detect.fixations(just_eyedata,lambda = 15)
View(fx)
fx = detect.fixations(just_eyedata,lambda = 7)
View(fx)
diagnostic.plot(just_eyedata, fx)
fx = detect.fixations(just_eyedata,lambda = 5)
diagnostic.plot(just_eyedata, fx)
fx = detect.fixations(just_eyedata,lambda = 15)
diagnostic.plot(just_eyedata, fx)
fx = detect.fixations(just_eyedata,lambda = 20)
diagnostic.plot(just_eyedata, fx)
fx = detect.fixations(just_eyedata,lambda = 15)
diagnostic.plot(just_eyedata, fx)
ggplot(data=fx, aes(x = x, y = y,color=dur)) +
geom_point() + scale_colour_gradientn(colours = rainbow(10))
ggplot(data=fx, aes(x = x, y = y,color=dur,size=dur)) +
geom_point() + scale_colour_gradientn(colours = rainbow(10))
ggplot(data=fx, aes(x = x, y = y,color=dur,size=dur+50)) +
geom_point() + scale_colour_gradientn(colours = rainbow(10))
ggplot(data=fx, aes(x = x, y = y,color=dur,size=(dur+50))) +
geom_point() + scale_colour_gradientn(colours = rainbow(10))
ggplot(data=fx, aes(x = x, y = y,color=dur,size=dur)) +
geom_point() + scale_colour_gradientn(colours = rainbow(10))
ggplot(data=fx, aes(x = x, y = y,color=dur,size=dur)) +
geom_point() + scale_colour_gradientn(colours = heat(10))
ggplot(data=fx, aes(x = x, y = y,color=dur,size=dur)) +
geom_point() + scale_colour_gradientn(colours = hot(10))
ggplot(data=fx, aes(x = x, y = y,color=dur,size=dur)) +
geom_point()
ggplot(data=fx, aes(x = x, y = y,color=dur,size=dur)) +
geom_point() + scale_colour_gradientn(colours = heat.colors(10))
ggplot(data=fx, aes(x = x, y = y,color=dur,size=dur)) +
geom_point() + scale_colour_gradientn(colours = reds(10))
ggplot(data=fx, aes(x = x, y = y,color=dur,size=dur)) +
geom_point() + scale_colour_gradientn(colours = Reds(10))
ggplot(data=fx, aes(x = x, y = y,color=dur,size=dur)) +
geom_point() + scale_colour_brewer(colours=Reds())
ggplot(data=fx, aes(x = x, y = y,color=dur,size=dur)) +
geom_point() + scale_colour_brewer()
ggplot(data=fx, aes(x = x, y = y,color=dur,size=dur)) +
geom_point() +
scale_colour_gradientn(colours = colorRampPalette(rev(brewer.pal(11, "Spectral")))(1000))
ggplot(data=fx, aes(x = x, y = y,color=dur,size=dur)) +
geom_point() +
scale_colour_gradientn(colours = rev(heat.colors()))
scale_colour_gradientn(colours = rev(heat.colors(20)))
ggplot(data=fx, aes(x = x, y = y,color=dur,size=dur)) +
geom_point() +
scale_colour_gradientn(colours = rev(heat.colors(20)))
scale_colour_gradientn(colours = rev(rainbow(20)))
ggplot(data=fx, aes(x = x, y = y,color=dur,size=dur)) +
geom_point() +
scale_colour_gradientn(colours = rev(rainbow(20)))
## TODO: ##
# learning effects and split half
# lmer slow on variable slope
# accuracy goes up faster in the color condition
## NOTES ##
#S15 did best in black in 1st and second half. Actually better with black. Lots of eye fatiue/blinking.
require(ggplot2)
library(plyr)
library('binom')
#library('languageR')
library('lme4')
library('arm')
library('sjPlot') #good package for plotting lmer
library("scales")
library("saccades")
data_dir = 'C:\Users\me\Google Drive\classes_meetings\HCI_f2015\Ataglance\CODE\learning_at_a_glance\data'
subjects = c('Colleen', 'Jeremy', 'Riz', 'Tricia', 'Wes')
# load in all csv files
for (s in 1:length(subjects))
csvlist = list.files(pattern=data_dir + "\*learn*")
for (i in 1:length(csvlist)){
tmp = read.csv(csvlist[i]);
#tmp$subjID = rep(substring(csvlist[i],1,3),times=nrow(tmp)); # add subjid to every row
#tmp = rbind(colorstim,blackstim)
if (i == 1) {
all_data = tmp;
} else {
all_data = rbind(all_data,tmp) # combine csvs into one
}
}
}
## TODO: ##
# learning effects and split half
# lmer slow on variable slope
# accuracy goes up faster in the color condition
## NOTES ##
#S15 did best in black in 1st and second half. Actually better with black. Lots of eye fatiue/blinking.
require(ggplot2)
library(plyr)
library('binom')
#library('languageR')
library('lme4')
library('arm')
library('sjPlot') #good package for plotting lmer
library("scales")
library("saccades")
data_dir = 'C:\Users\me\Google Drive\classes_meetings\HCI_f2015\Ataglance\CODE\learning_at_a_glance\data'
subjects = c('Colleen', 'Jeremy', 'Riz', 'Tricia', 'Wes')
# load in all csv files
for (s in 1:length(subjects)){
csvlist = list.files(pattern=data_dir + "\*learn*")
for (i in 1:length(csvlist)){
tmp = read.csv(csvlist[i]);
#tmp$subjID = rep(substring(csvlist[i],1,3),times=nrow(tmp)); # add subjid to every row
#tmp = rbind(colorstim,blackstim)
if (i == 1) {
all_data = tmp;
} else {
all_data = rbind(all_data,tmp) # combine csvs into one
}
}
}
for (s in 1:length(subjects)){
subjects
subjects
subjects
source('C:/Users/me/Google Drive/classes_meetings/HCI_f2015/Ataglance/CODE/learning_at_a_glance/analysis/analysis.R', echo=TRUE)
list.files?
?list.files
source('C:/Users/me/Google Drive/classes_meetings/HCI_f2015/Ataglance/CODE/learning_at_a_glance/analysis/analysis.R', echo=TRUE)
csvlist = list.files(path=file.path(data_dir, subjects[s]),pattern='*learn*')
data_dir = 'C:\Users\me\Google Drive\classes_meetings\HCI_f2015\Ataglance\CODE\learning_at_a_glance\data'
readClipboard()
source('C:/Users/me/Google Drive/classes_meetings/HCI_f2015/Ataglance/CODE/learning_at_a_glance/analysis/analysis.R', echo=TRUE)
source('C:/Users/me/Google Drive/classes_meetings/HCI_f2015/Ataglance/CODE/learning_at_a_glance/analysis/analysis.R', echo=TRUE)
file.path(data_dir, subjects[s])
source('C:/Users/me/Google Drive/classes_meetings/HCI_f2015/Ataglance/CODE/learning_at_a_glance/analysis/analysis.R', echo=TRUE)
paste(data_dir, subjects[s], sep="\\")
source('C:/Users/me/Google Drive/classes_meetings/HCI_f2015/Ataglance/CODE/learning_at_a_glance/analysis/analysis.R', echo=TRUE)
all_data
View(all_data)
source('C:/Users/me/Google Drive/classes_meetings/HCI_f2015/Ataglance/CODE/learning_at_a_glance/analysis/analysis.R', echo=TRUE)
summary(all_data)
just_eyedata = data.frame(x=all_data$xmousex,y=all_data$ymousey,
time=seq.int(1, nrow(all_data)),trial=rep.int(1, nrow(all_data)))
fx = detect.fixations(just_eyedata,lambda = 15)
diagnostic.plot(just_eyedata, fx)
ggplot(data=fx, aes(x = x, y = y,color=dur,size=dur)) +
geom_point() +
scale_colour_gradientn(colours = rev(rainbow(20)))
fx
just_eyedata = data.frame(x=all_data$xmousex,y=all_data$ymousey,
time=seq.int(1, nrow(all_data)),trial=rep.int(1, nrow(all_data)))
View(all_data)
subset(all_data,Fixation=='NA')
subset(all_data,Fixation!='NA')
all_data = subset(all_data,Fixation!='NA')
View(all_data)
all_data = subset(all_data,Fixation =='true')
just_eyedata = data.frame(x=all_data$xmousex,y=all_data$ymousey,
time=seq.int(1, nrow(all_data)),trial=rep.int(1, nrow(all_data)))
fx = detect.fixations(just_eyedata,lambda = 15)
just_eyedata = data.frame(x=all_data$xmousex,y=all_data$ymousey,
time=seq.int(1, nrow(all_data)),trial=rep.int(1, nrow(all_data)))
View(all_data)
View(all_data)
source('C:/Users/me/Google Drive/classes_meetings/HCI_f2015/Ataglance/CODE/learning_at_a_glance/analysis/analysis.R', echo=TRUE)
clear
clc
source('C:/Users/me/Google Drive/classes_meetings/HCI_f2015/Ataglance/CODE/learning_at_a_glance/analysis/analysis.R', echo=TRUE)
source('C:/Users/me/Google Drive/classes_meetings/HCI_f2015/Ataglance/CODE/learning_at_a_glance/analysis/analysis.R', echo=TRUE)
source('C:/Users/me/Google Drive/classes_meetings/HCI_f2015/Ataglance/CODE/learning_at_a_glance/analysis/analysis.R', echo=TRUE)
View(test_data)
answer_data = subset(test_data,isAnswer==1)
View(answer_data)
answer_data = subset(test_data,isAnswer==1 & region >= 0)
answer_data = subset(test_data,isAnswer==1 & region >= 0)
View(answer_data)
answer_data = subset(test_data,isAnswer==1)
answer_data = subset(test_data,isAnswer==1)
View(all_data)
View(answer_data)
sp <- ggplot(data = answer_data, aes(xmousex, ymousey, label=region)) +
geom_point() + geom_text()
ggplot(data = answer_data, aes(xmousex, ymousey, label=region)) +
geom_point() + geom_text()
ggplot(data = answer_data, aes(xmousex, ymousey, label=region)) + geom_point() + geom_text(size=20)
ggplot(data = answer_data, aes(xmousex, ymousey, label=region)) + geom_point() + geom_text(size=10)
install.packages('boot')
source('C:/Users/me/Desktop/learning_at_a_glance/analysis/analysis.R')
source('C:/Users/me/Desktop/learning_at_a_glance/analysis/analysis.R')
install.packages('ggplot2')
source('C:/Users/me/Desktop/learning_at_a_glance/analysis/analysis.R')
install.packages('ggplot2', dep = TRUE)
source('C:/Users/me/Desktop/learning_at_a_glance/analysis/analysis.R')
source('C:/Users/me/Desktop/learning_at_a_glance/analysis/analysis.R', echo=TRUE)
str(acc_diff)
str(names(acc_diff$participant))
acc_diff$participant
levels(acc_diff$participant)
survey_data = read.csv(paste(data_dir, 'survey_data.csv', sep="\\"));
survey_data
View(survey_data)
diff = merge(diff,survey_data,by='participant')
View(diff)
ggplot(data=diff, aes(x = acc_increase, y = speedup)) +
geom_point() +
theme(plot.title = element_text(size=20, face="bold", vjust=2)) +
labs(y="Gaze Speed Up (Seconds)", x="Gaze Accuracy Improvements", title="Gaze Benefit") +
geom_text(data=diff, aes(acc_increase, speedup, label=round(mouse_faster),color=participant), size=30)
ggplot(data=diff, aes(x = acc_increase, y = speedup)) +
geom_point() +
theme(plot.title = element_text(size=20, face="bold", vjust=2)) +
labs(y="Gaze Speed Up (Seconds)", x="Gaze Accuracy Improvements", title="Gaze Benefit") +
geom_text(data=diff, aes(acc_increase, speedup, label=round(mouse_faster-3),color=participant), size=30)
ggplot(data=diff, aes(x = acc_increase, y = speedup)) +
geom_point() +
theme(plot.title = element_text(size=20, face="bold", vjust=2)) +
labs(y="Gaze Speed Up (Seconds)", x="Gaze Accuracy Improvements", title="Gaze Benefit") +
geom_text(data=diff, aes(acc_increase, speedup, label=round(-1*(mouse_faster-3)),color=participant), size=30)
ggplot(data=diff, aes(x = acc_increase, y = speedup)) +
geom_point() +
theme(plot.title = element_text(size=20, face="bold", vjust=2)) +
labs(y="Gaze Speed Up (Seconds)", x="Gaze Accuracy Improvements", title="Gaze Benefit") +
geom_text(data=diff, aes(acc_increase, speedup, label=round(-1*(mouse_preference-3)),color=participant), size=30)
labels = c('a','b','c','d','e')
labels = c('a','b','c','d','e')
ggplot(data=diff, aes(x = acc_increase, y = speedup)) +
geom_point() +
theme(plot.title = element_text(size=20, face="bold", vjust=2)) +
labs(y="Gaze Speed Up (Seconds)", x="Gaze Accuracy Improvements", title="Gaze Benefit") +
geom_text(data=diff, aes(acc_increase, speedup, label=labels[mouse_preference],color=participant), size=30)
labels = c('g>>m','g>m','==','m>g','m>>g')
ggplot(data=diff, aes(x = acc_increase, y = speedup)) +
geom_point() +
theme(plot.title = element_text(size=20, face="bold", vjust=2)) +
labs(y="Gaze Speed Up (Seconds)", x="Gaze Accuracy Improvements", title="Gaze Benefit") +
geom_text(data=diff, aes(acc_increase, speedup, label=labels[mouse_preference],color=participant), size=30)
str(survey_data)
vars2plot = c('mouse_more_enjoyable','mouse_faster','mouse_preference','mouse_easier')
for (lt in vars2plot) {
labels = c('g>>m','g>m','==','m>g','m>>g')
ggplot(data=diff, aes(x = acc_increase, y = speedup)) +
geom_point() +
theme(plot.title = element_text(size=20, face="bold", vjust=2)) +
labs(y="Gaze Speed Up (Seconds)", x="Gaze Accuracy Improvements", title=paste("Gaze Benefit",lt)) +
geom_text(data=diff, aes(acc_increase, speedup,
label=labels[eval(lt)],color=participant), size=30)
}
vars2plot = c('mouse_more_enjoyable','mouse_faster','mouse_preference','mouse_easier')
for (lt in vars2plot) {
labels = c('g>>m','g>m','==','m>g','m>>g')
ggplot(data=diff, aes(x = acc_increase, y = speedup)) +
geom_point() +
theme(plot.title = element_text(size=20, face="bold", vjust=2)) +
labs(y="Gaze Speed Up (Seconds)", x="Gaze Accuracy Improvements", title=paste("Gaze Benefit",lt)) +
geom_text(data=diff, aes(acc_increase, speedup,
label=labels[eval(lt)],color=participant), size=30)
}
lt
eval(lt)
get(lt)
vars2plot = c('mouse_more_enjoyable','mouse_faster','mouse_preference','mouse_easier')
for (lt in vars2plot) {
labels = c('g>>m','g>m','==','m>g','m>>g')
ggplot(data=diff, aes(x = acc_increase, y = speedup)) +
geom_point() +
theme(plot.title = element_text(size=20, face="bold", vjust=2)) +
labs(y="Gaze Speed Up (Seconds)", x="Gaze Accuracy Improvements", title=paste("Gaze Benefit",lt)) +
geom_text(data=diff, aes(acc_increase, speedup,
label=labels[get(lt)],color=participant), size=30)
}
vars2plot
vars2plot = c('mouse_more_enjoyable','mouse_faster','mouse_preference','mouse_easier')
for (lt in vars2plot) {
labels = c('g>>m','g>m','==','m>g','m>>g')
print(ggplot(data=diff, aes(x = acc_increase, y = speedup)) +
geom_point() +
theme(plot.title = element_text(size=20, face="bold", vjust=2)) +
labs(y="Gaze Speed Up (Seconds)", x="Gaze Accuracy Improvements", title=paste("Gaze Benefit",lt)) +
geom_text(data=diff, aes(acc_increase, speedup,
label=labels[get(lt)],color=participant), size=30))
}
for (lt in vars2plot) {
labels = c('g>>m','g>m','g==m','m>g','m>>g')
print(ggplot(data=diff, aes(x = acc_increase, y = speedup)) +
geom_point() +
theme(plot.title = element_text(size=20, face="bold", vjust=2)) +
labs(y="Gaze Speed Up (Seconds)", x="Gaze Accuracy Improvements", title=paste("Gaze Benefit",lt)) +
geom_text(data=diff, aes(acc_increase, speedup,
label=labels[get(lt)],color=participant), size=30))
}
for (lt in vars2plot) {
labels = c('g+','g','=','m','m+')
print(ggplot(data=diff, aes(x = acc_increase, y = speedup)) +
geom_point() +
theme(plot.title = element_text(size=20, face="bold", vjust=2)) +
labs(y="Gaze Speed Up (Seconds)", x="Gaze Accuracy Improvements", title=paste("Gaze Benefit",lt)) +
geom_text(data=diff, aes(acc_increase, speedup,
label=labels[get(lt)],color=participant), size=30))
}
vars2plot = c('mouse_more_enjoyable','mouse_faster','mouse_preference','mouse_easier')
for (lt in vars2plot) {
labels = c('g','g','=','m','m')
print(ggplot(data=diff, aes(x = acc_increase, y = speedup)) +
geom_point() +
theme(plot.title = element_text(size=20, face="bold", vjust=2)) +
labs(y="Gaze Speed Up (Seconds)", x="Gaze Accuracy Improvements", title=paste("Gaze Benefit",lt)) +
geom_text(data=diff, aes(acc_increase, speedup,
label=labels[get(lt)],color=participant), size=30))
}
vars2plot = c('mouse_more_enjoyable','mouse_faster','mouse_preference','mouse_easier')
for (lt in vars2plot) {
labels = c('g','g','=','m','m')
print(ggplot(data=diff, aes(x = acc_increase, y = speedup)) +
geom_point() +
theme(plot.title = element_text(size=20, face="bold", vjust=2)) +
labs(y="Gaze Speed Up (Seconds)", x="Gaze Accuracy Improvements", title=paste("Gaze Benefit",lt)) +
geom_text(data=diff, aes(acc_increase, speedup,
label=labels[get(lt)],color=participant), size=30)) +
xlim(c(-.5, .5)) +
ylim(c(-60, 60))
}
vars2plot = c('mouse_more_enjoyable','mouse_faster','mouse_preference','mouse_easier')
for (lt in vars2plot) {
labels = c('g','g','=','m','m')
print(ggplot(data=diff, aes(x = acc_increase, y = speedup)) +
geom_point() +
theme(plot.title = element_text(size=20, face="bold", vjust=2)) +
labs(y="Gaze Speed Up (Seconds)", x="Gaze Accuracy Improvements", title=paste("Gaze Benefit",lt)) +
geom_text(data=diff, aes(acc_increase, speedup,
label=labels[get(lt)],color=participant), size=30)) +
coord_cartesian(xlim = c(-.5,.5), ylim = c(-60,60))
}
#gaze faster?
vars2plot = c('mouse_more_enjoyable','mouse_faster','mouse_preference','mouse_easier')
for (lt in vars2plot) {
labels = c('g','g','=','m','m')
print(ggplot(data=diff, aes(x = acc_increase, y = speedup)) +
geom_point() +
theme(plot.title = element_text(size=20, face="bold", vjust=2)) +
labs(y="Gaze Speed Up (Seconds)", x="Gaze Accuracy Improvements", title=paste("Gaze Benefit",lt)) +
geom_text(data=diff, aes(acc_increase, speedup,
label=labels[get(lt)],color=participant), size=30) +
coord_cartesian(xlim = c(-.5,.5), ylim = c(-60,60)))
}
vars2plot = c('mouse_more_enjoyable','mouse_faster','mouse_preference','mouse_easier')
for (lt in vars2plot) {
labels = c('g','g','=','m','m')
print(ggplot(data=diff, aes(x = acc_increase, y = speedup)) +
geom_point() +
theme(plot.title = element_text(size=20, face="bold", vjust=2)) +
labs(y="Gaze Speed Up (Seconds)", x="Gaze Accuracy Improvements", title=paste("Gaze Benefit",lt)) +
geom_text(data=diff, aes(acc_increase, speedup,
label=labels[get(lt)],color=participant), size=30) +
coord_cartesian(xlim = c(-.5,.5), ylim = c(-80,80)))
}
vars2plot = c('mouse_more_enjoyable','mouse_faster','mouse_preference','mouse_easier')
for (lt in vars2plot) {
labels = c('g','g','=','m','m')
print(ggplot(data=diff, aes(x = acc_increase, y = speedup)) +
geom_point() +
theme(plot.title = element_text(size=20, face="bold", vjust=2)) +
labs(y="Gaze Speed Up (Seconds)", x="Gaze Accuracy Improvements", title=paste("Gaze Benefit",lt)) +
geom_text(data=diff, aes(acc_increase, speedup,
label=labels[get(lt)],color=participant), size=30))
}
for (lt in vars2plot) {
labels = c('g','g','=','m','m')
print(ggplot(data=diff, aes(x = acc_increase, y = speedup)) +
geom_point() +
theme(plot.title = element_text(size=20, face="bold", vjust=2)) +
labs(y="Gaze Speed Up (Seconds)", x="Gaze Accuracy Improvements", title=paste("Gaze Benefit",lt)) +
geom_text(data=diff, aes(acc_increase, speedup,
label=labels[get(lt)],color=participant), size=30) +
ylim(c(-60,60)))
}
vars2plot = c('mouse_more_enjoyable','mouse_faster','mouse_preference','mouse_easier')
for (lt in vars2plot) {
labels = c('g','g','=','m','m')
print(ggplot(data=diff, aes(x = acc_increase, y = speedup)) +
geom_point() +
theme(plot.title = element_text(size=20, face="bold", vjust=2)) +
labs(y="Gaze Speed Up (Seconds)", x="Gaze Accuracy Improvements", title=paste("Gaze Benefit",lt)) +
geom_text(data=diff, aes(acc_increase, speedup,
label=labels[get(lt)],color=participant), size=30) +
ylim(c(-60,60)) +
xlim(c(-.5,.5))
)
}
vars2plot = c('mouse_more_enjoyable','mouse_faster','mouse_preference','mouse_easier')
for (lt in vars2plot) {
labels = c('g','g','=','m','m')
print(ggplot(data=diff, aes(x = acc_increase, y = speedup)) +
geom_point() +
theme(plot.title = element_text(size=20, face="bold", vjust=2)) +
labs(y="Gaze Speed Up (Seconds)", x="Gaze Accuracy Improvements", title=paste("Gaze Benefit",lt)) +
geom_text(data=diff, aes(acc_increase, speedup,
label=labels[get(lt)],color=participant), size=30) +
ylim(c(-60,60)) +
xlim(c(-.6,.6))
)
}
vars2plot = c('mouse_more_enjoyable','mouse_faster','mouse_preference','mouse_easier')
vars2title = c('Which more ENJOYABLE?','Which is FASTER?','Which would YOU USE?','Which is EASIER?')
for (lt in 1:length(vars2plot)) {
labels = c('g','g','=','m','m')
print(ggplot(data=diff, aes(x = acc_increase, y = speedup)) +
geom_point() +
theme(plot.title = element_text(size=20, face="bold", vjust=2)) +
labs(y="Gaze Speed Up (Seconds)", x="Gaze Accuracy Improvements", title=paste("Gaze Benefit:",vars2title[lt])) +
geom_text(data=diff, aes(acc_increase, speedup,
label=labels[get(vars2plot[lt])],color=participant), size=30) +
ylim(c(-60,60)) +
xlim(c(-.6,.6))
)
}
#plot accuracy over subjects
accuracy <- ddply(answer_data, c('input'), summarise,
acc = mean(isCorrect==1),
CI  = 1.96*sqrt(mean(isCorrect==1)*(1-mean(isCorrect==1))/length(isCorrect)))
ggplot(data=accuracy, aes(x = input, y = acc)) +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymax=acc+CI, ymin=acc-CI), position="dodge")
learning_time <- ddply(answer_data, c('input', 'participant', 'stimulus'), summarise,
total_time = (max(timestamp) - min(timestamp))/1000)
ggplot(data=learning_time, aes(x = stimulus, y = total_time, fill= input)) +
stat_boxplot(geom ='errorbar')+
geom_boxplot() + geom_point(position = "jitter")
learning_time <- ddply(answer_data, c('input', 'participant'), summarise,
total_time = (max(timestamp) - min(timestamp))/1000)
ggplot(data=learning_time, aes(x = input, y = total_time, fill= input)) +
stat_boxplot(geom ='errorbar')+
geom_boxplot() + geom_point(position = "jitter",size=10,alpha=.5)
#TODO: add boot conf from website
summary(learning_time)
mean(subset(learning_time,input=='gaze'))
subset(learning_time,input=='gaze')
mean(subset(learning_time,input=='gaze')$total_time)
mean(subset(learning_time,input=='gaze')$total_time)
sd(subset(learning_time,input=='gaze')$total_time)
sd(subset(learning_time,input=='mouse')$total_time)
mean(subset(learning_time,input=='mouse')$total_time)
mean(subset(learning_time,input=='gaze')$total_time)
sd(subset(learning_time,input=='mouse')$total_time)
sd(subset(learning_time,input=='gaze')$total_time)
ggplot(data=learning_time, aes(x = stimulus, y = total_time, fill= input)) +
stat_boxplot(geom ='errorbar')+
geom_boxplot() + geom_point(position = "jitter")
learning_time <- ddply(answer_data, c('input', 'participant'), summarise,
total_time = (max(timestamp) - min(timestamp))/1000)
ggplot(data=learning_time, aes(x = input, y = total_time, fill= input)) +
stat_boxplot(geom ='errorbar')+
geom_boxplot() + geom_point(position = "jitter",size=10,alpha=.5)
#TODO: add boot conf from website
ggplot(data=learning_time, aes(x = stimulus, y = total_time, fill= input)) +
geom_bar()
accuracy <- ddply(answer_data, c('stimulus','input'), summarise,
acc = mean(isCorrect==1),
CI  = 1.96*sqrt(mean(isCorrect==1)*(1-mean(isCorrect==1))/length(isCorrect)))
ggplot(data=accuracy, aes(x = stimulus, y = acc,fill=input)) +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymax=acc+CI, ymin=acc-CI), position="dodge")
ggplot(data=learning_time, aes(x = stimulus, y = acc,fill=input)) +
geom_bar(stat="identity", position=position_dodge())
ggplot(data=learning_time, aes(x = stimulus, y = total_time,fill=input)) +
geom_bar(stat="identity", position=position_dodge())
ggplot(data=learning_time, aes(x = stimulus, y = total_time, fill=input)) +
geom_bar(stat="identity")
learning_time <- ddply(answer_data, c('input', 'participant', 'stimulus'), summarise,
total_time = (max(timestamp) - min(timestamp))/1000)
ggplot(data=learning_time, aes(x = stimulus, y = total_time, fill=input)) +
geom_bar(stat="identity")
ggplot(data=learning_time, aes(x = stimulus, y = total_time, fill=input)) +
geom_bar(stat="identity", position=position_dodge())
sjt.df(learning_time)
?sjt.df
sjt.xtab(learning_time$total_time,
learning_time$stimus,
learning_time$input)
table(learning_time)
ddply(answer_data,interaction(input,stimulis),summarise,mean=mean(age),sd=sd(age))
ddply(answer_data,c('input','stimulus'),summarise,mean=mean(age),sd=sd(age))
ddply(answer_data,c('input','stimulus'),summarise,mean=mean(total_time),sd=sd(total_time))
ddply(answer_data,interaction('input','stimulus'),summarise,mean=mean(total_time),sd=sd(total_time))
ddply(learning_time,interaction('input','stimulus'),summarise,mean=mean(total_time),sd=sd(total_time))
ddply(learning_time, c('input', 'stimulus'), summarise,
,mean=mean(total_time),sd=sd(total_time))
learning_time <- ddply(learning_time, c('input', 'stimulus'), summarise
,mean=mean(total_time),sd=sd(total_time))
learning_time
for (lt in 1:length(vars2plot)) {
labels = c('g','g','=','m','m')
print(ggplot(data=diff, aes(x = acc_increase, y = speedup)) +
geom_point() +
theme(plot.title = element_text(size=20, face="bold", vjust=2)) +
labs(y="Gaze Speed Up (Seconds)", x="Gaze Accuracy Improvements", title=paste("Gaze Benefit:",vars2title[lt])) +
geom_text(data=diff, aes(acc_increase, speedup,
label=labels[get(vars2plot[lt])],color=participant), size=30) +
ylim(c(-60,60)) +
xlim(c(-.6,.6))
)
}
install.packages(apaTables)
install.packages('apaTables')
version()
version
version
